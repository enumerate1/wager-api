// Code generated by mockgen. DO NOT EDIT.
package mock_repositories

import (
	"context"

	"github.com/jackc/pgconn"
	"github.com/jackc/pgtype"
	"github.com/stretchr/testify/mock"

	"github.com/wager-api/internal/entities"
	"github.com/wager-api/internal/repositories"
	"github.com/wager-api/libs/database"
)

type MockWagerRepo struct {
	mock.Mock
}

func (r *MockWagerRepo) Create(arg1 context.Context, arg2 database.Ext, arg3 *entities.Wager) error {
	args := r.Called(arg1, arg2, arg3)
	return args.Error(0)
}
func (r *MockWagerRepo) Update(arg1 context.Context, arg2 database.Ext, arg3 *entities.Wager) (pgconn.CommandTag,error) {
	args := r.Called(arg1, arg2, arg3)
	return args.Get(0).(pgconn.CommandTag), args.Error(1)
}

func (r *MockWagerRepo) Get(arg1 context.Context, arg2 database.Ext, arg3 pgtype.Int4, arg4 ...repositories.QueryEnhancer) (*entities.Wager, error) {
	args := r.Called(arg1, arg2, arg3)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*entities.Wager), args.Error(1)
}

func (r *MockWagerRepo) List(arg1 context.Context, arg2 database.Ext, arg3 pgtype.Int4, arg4 uint32) ([]*entities.Wager, error) {
	args := r.Called(arg1, arg2, arg3, arg4)

	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entities.Wager), args.Error(1)
}